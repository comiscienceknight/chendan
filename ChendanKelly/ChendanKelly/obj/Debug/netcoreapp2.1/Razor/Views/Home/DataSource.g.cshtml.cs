#pragma checksum "C:\Projects\ChendanKelly\chendan\ChendanKelly\ChendanKelly\Views\Home\DataSource.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "d805bcda3bb7ced9f6237c4452ba30e4748b8295"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_DataSource), @"mvc.1.0.view", @"/Views/Home/DataSource.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/DataSource.cshtml", typeof(AspNetCore.Views_Home_DataSource))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Projects\ChendanKelly\chendan\ChendanKelly\ChendanKelly\Views\_ViewImports.cshtml"
using ChendanKelly;

#line default
#line hidden
#line 2 "C:\Projects\ChendanKelly\chendan\ChendanKelly\ChendanKelly\Views\_ViewImports.cshtml"
using ChendanKelly.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d805bcda3bb7ced9f6237c4452ba30e4748b8295", @"/Views/Home/DataSource.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"13d5adcc34f9525c7b600a27605207bbd2339239", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_DataSource : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "C:\Projects\ChendanKelly\chendan\ChendanKelly\ChendanKelly\Views\Home\DataSource.cshtml"
  
    ViewData["Title"] = "Data Source";

#line default
#line hidden
            BeginContext(47, 2836, true);
            WriteLiteral(@"

<div class=""row"" id=""datasource"">

    <div class=""col-lg-4"" style=""padding:5px;"">
        <label for=""start"">文件对应的日期</label>
        <input type=""date"" id=""file-date-picker"" name=""trip""
               value=""2018-07-22""
               min=""2018-01-01"" max=""2018-12-31"" />
        <input id=""file-picker"" type=""file"" value=""选择数据文件上传到系统"" />
        <div id=""fileGrid"" style=""height:600px;min-height: 600px;width:100%;margin-top:5px;""
             class=""ag-theme-balham""></div>
    </div>

    <div class=""col-lg-8"" style=""padding:5px;"">
        <h4 id=""file-name""></h4>
        <div id=""datasourceGrid"" style=""height:600px;min-height: 600px;width:100%;margin-top:5px;""
             class=""ag-theme-balham""></div>
    </div>

</div>

<script src=""https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.8.0/xlsx.js""></script>
<script src=""https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.8.0/jszip.js""></script>

<script type=""text/javascript"" charset=""utf-8"">
    $(document).ready(function () {
        $('#");
            WriteLiteral(@"file-date-picker').val(new Date().toDateInputValue());
    });

    var fileGridColumnDefs = [
        {
            headerName: ""Date"", field: ""date"", width: 120
        },
        {
            headerName: ""FileName"", field: ""fileName""
        }
    ];
    var fileRowData = [
        { date: ""2018-07-01"", fileName: ""excel file number 1.csv"" },
        { date: ""2018-07-02"", fileName: ""excel file number xxxxxxxxx.csv"" },
        { date: ""2018-07-03"", fileName: ""excel file number 1.xls"" }
    ];
    var fileGridOptions = {
        columnDefs: fileGridColumnDefs,
        rowData: fileRowData
    };
    var fileGrid = document.querySelector('#fileGrid');
    new agGrid.Grid(fileGrid, fileGridOptions);

    $(""#file-picker"").change(function (e) {
        let file = e.currentTarget.files[0];
        var reader = new FileReader();
        reader.onload = function () {
            var fileJson = csvJSON(reader.result);
           // debugger;
            if (fileJson.length > 0 && fileJs");
            WriteLiteral(@"on[0][""\""订单编号\""""] !== undefined) {
                uploadBaobei($('#file-date-picker')[0].value, fileJson);
            }
        };
        reader.readAsText(file, 'utf-8');
    });

    function uploadBaobei(date, jsonValue) {
        debugger;
    }

    function csvJSON(csv) {
        var lines = csv.split(""\n"");
        var result = [];
        var headers = lines[0].split("","");
        for (var i = 1; i < lines.length; i++) {
            var obj = {};
            var currentline = lines[i].split("","");
            for (var j = 0; j < headers.length; j++) {
                obj[headers[j]] = currentline[j];
            }
            result.push(obj);
        }
        //return result; //JavaScript object
        return result; //JSON
    }
</script>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
