@{
    ViewData["Title"] = "Data Source";
}

<style>
    table, td {
        border: 1px solid black;
    }
    tr {
        border: 1px solid black;
    }
</style>

<div class="row" id="datasource">
    <div class="col-lg-12" style="padding:5px;">
        <input type="date" id="date-picker" name="trip"
               onchange="datePickerChange()"
               min="2018-01-01" max="2028-12-31" />
        <h2 id="loading">正在计算数据... 如果数据多可能会需要等待几十秒</h2>
        <div id="result-table" style="margin-top:10px;">

        </div>
    </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.8.0/xlsx.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.8.0/jszip.js"></script>

<script type="text/javascript" charset="utf-8">
    $(document).ready(function () {
        $('#date-picker').val(formatDate(new Date()));
        getResultByDate($('#date-picker')[0].value);
    });

    function datePickerChange() {
        getResultByDate($('#date-picker')[0].value);
    }

    function getResultByDate(date) {
        $('#loading')[0].style.display = 'initial';
        $('#result-table')[0].innerHtml = '';
        fetch('/DataSource/GetResult/' + date, {
            method: 'GET',
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            }
        }).then(e => {
            $('#loading')[0].style.display = 'none';
            if (e.status === 200) {
                return e.json()
            }
            else {
                return undefined;
            }
        }).then(body => {
            //$('#result-table')[0].innerHTML = JSON.stringify(body);
            composeHtml(body);
        });
            //.catch(e => {
            //    $('#loading')[0].style.display = 'none';
            //});
    }

    function composeHtml(dataSource) {
        var table = document.createElement('table');
        let baobeiPositions = [], feePositions = [];
        debugger;
        composeFirst3Lines(table, dataSource, baobeiPositions, feePositions);
        debugger;
        composeTransactions(table, dataSource, baobeiPositions, feePositions);

        document.getElementById('result-table').innerHTML = '';
        document.getElementById('result-table').appendChild(table);
    }
    function composeCell(td, innerText) {
        let tdDiv = document.createElement('div');
        tdDiv.innerText = innerText;
        tdDiv.style.width = '100px';
        tdDiv.style.padding = '5px';
        td.appendChild(tdDiv);
    }
    function composeTransactions(table, dataSource, baobeiPositions, feePositions) {
        let transactions = dataSource.transactions;
        for (let i = 0; i < transactions.length; i++) {
            let transc = transactions[i];
            var row = document.createElement('tr');
            let td_transactionid = document.createElement('td');
            composeCell(td_transactionid, transc.orderId);
            row.appendChild(td_transactionid);
            let td_settle = document.createElement('td');
            composeCell(td_settle, transc.settle);
            row.appendChild(td_settle);
            let td_sellPrice = document.createElement('td');
            composeCell(td_sellPrice, transc.sellPrice);
            row.appendChild(td_sellPrice);
            
            for (let j = 0; j < feePositions.length; j++) {
                let ifMatched = false;
                for (let k = 0; k < transc.feeResults.length; k++) {
                    if (feePositions[j] === transc.feeResults[k].feeType) {
                        let tdFee = document.createElement('td');
                        composeCell(tdFee, transc.feeResults[k].feeAmount);
                        row.appendChild(tdFee);
                        ifMatched = true;
                        break;
                    }
                }
                if (ifMatched === false) {
                    row.appendChild(document.createElement('td'));
                }
            }

            for (let j = 0; j < baobeiPositions.length; j++) {
                let ifMatched = false;
                for (let k = 0; k < transc.baobeiResults.length; k++) {
                    if (baobeiPositions[j] === transc.baobeiResults[k].baobeiId) {
                        let tdBaobeiQuantity = document.createElement('td');
                        composeCell(tdBaobeiQuantity, transc.baobeiResults[k].quantity);
                        row.appendChild(tdBaobeiQuantity);
                        let tdBaobeiAmount = document.createElement('td');
                        composeCell(tdBaobeiAmount, transc.baobeiResults[k].amount);
                        row.appendChild(tdBaobeiAmount);
                        ifMatched = true;
                        break;
                    }
                }
                if (ifMatched === false) {
                    row.appendChild(document.createElement('td'));
                    row.appendChild(document.createElement('td'));
                }
            }
            table.appendChild(row);
        }
    }
    function composeFirst3Lines(table, dataSource, baobeiPositions, feePositions) {
        var trFirstRow = document.createElement('tr');
        var trSecondRow = document.createElement('tr');
        var trThirdRow = document.createElement('tr');

        let td1_0 = document.createElement('td');
        td1_0.colSpan = dataSource.feeTypes.length + 3;
        trFirstRow.appendChild(td1_0);
        let td2_0 = document.createElement('td');
        td2_0.colSpan = dataSource.feeTypes.length + 3;
        trSecondRow.appendChild(td2_0);
        for (let i = 0; i < dataSource.feeTypes.length + 3; i++) {
            if (i >= 3) {
                let feeType = dataSource.feeTypes[i-3];
                let td3 = document.createElement('td');
                let td3_innerDiv = document.createElement('div');
                td3_innerDiv.innerText = feeType;
                td3_innerDiv.style.width = '100px';
                td3_innerDiv.style.padding = '5px';
                td3.appendChild(td3_innerDiv);
                trThirdRow.appendChild(td3);
                feePositions.push(feeType);
            }
            else{
                let td3 = document.createElement('td');
                let td3_innerDiv = document.createElement('div');
                td3_innerDiv.style.width = '100px';
                if (i === 0) {
                    td3_innerDiv.innerText = '订单编号';
                    td3_innerDiv.style.width = '170px';
                }
                else if (i === 1)
                    td3_innerDiv.innerText = '已收款';
                else
                    td3_innerDiv.innerText = '总卖价';
                td3_innerDiv.style.padding = '5px';
                td3.appendChild(td3_innerDiv);
                trThirdRow.appendChild(td3);
            }
        }
        for (let i = 0; i < dataSource.baobeiTotalResults.length; i++) {
            let btr = dataSource.baobeiTotalResults[i];
            baobeiPositions.push(btr.baobeiId);

            let td = document.createElement('td');
            td.colSpan = 2;
            let td_innerDiv = document.createElement('div');
            td_innerDiv.innerText = btr.baobeiId + ' - ' + btr.baobeiTitle;
            td_innerDiv.style.width = '160px';
            td_innerDiv.style.padding = '5px';
            td.appendChild(td_innerDiv);
            trFirstRow.appendChild(td);


            baobeiPositions.push[btr.baobeiId];

            let td2_1 = document.createElement('td');
            let td2_1_innerDiv = document.createElement('div');
            td2_1_innerDiv.innerText = '总数量';
            td2_1_innerDiv.style.width = '80px';
            td2_1_innerDiv.style.padding = '5px';
            td2_1.appendChild(td2_1_innerDiv);
            trSecondRow.appendChild(td2_1);
            let td2_2 = document.createElement('td');
            let td2_2_innerDiv = document.createElement('div');
            td2_2_innerDiv.innerText = '产品总价';
            td2_2_innerDiv.style.width = '80px';
            td2_2_innerDiv.style.padding = '5px';
            td2_2.appendChild(td2_2_innerDiv);
            trSecondRow.appendChild(td2_2);

            let td3_1 = document.createElement('td');
            let td3_1_innerDiv = document.createElement('div');
            td3_1_innerDiv.innerText = btr.quantity;
            td3_1_innerDiv.style.width = '80px';
            td3_1_innerDiv.style.padding = '5px';
            td3_1.appendChild(td3_1_innerDiv);
            trThirdRow.appendChild(td3_1);
            let td3_2 = document.createElement('td');
            let td3_2_innerDiv = document.createElement('div');
            td3_2_innerDiv.innerText = btr.amount;
            td3_2_innerDiv.style.width = '80px';
            td3_2_innerDiv.style.padding = '5px';
            td3_2.appendChild(td3_2_innerDiv);
            trThirdRow.appendChild(td3_2);
        }

        table.appendChild(trFirstRow);
        table.appendChild(trSecondRow);
        table.appendChild(trThirdRow);
    }
    
    function formatDate(date) {
        var d = new Date(date),
            month = '' + (d.getMonth() + 1),
            day = '' + d.getDate(),
            year = d.getFullYear();

        if (month.length < 2) month = '0' + month;
        if (day.length < 2) day = '0' + day;

        return [year, month, day].join('-');
    }
</script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.8.0/jszip.js"></script>
